% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions_make.R
\name{make_feature_overlap_signal_profiles}
\alias{make_feature_overlap_signal_profiles}
\title{make_feature_overlap_signal_profiles}
\usage{
make_feature_overlap_signal_profiles(
  query_dt,
  overlaps_gr,
  feature_groups = NULL,
  view_size = NULL,
  group_var = "overlap_group",
  rank_var = "rnk",
  min_group_size = 50,
  max_group_size = 500,
  discard_group_below = 1,
  ...
)
}
\arguments{
\item{query_dt}{data.table that specifies file paths with $file.  Suitable for use with \link[seqsetvis]{ssvFetchBam} or \link[seqsetvis]{ssvFetchBigwig}}

\item{overlaps_gr}{GRanges with membership table in mcols.  Create with \link[seqsetvis]{ssvOverlapIntervalSets} or \link[seqsetvis]{ssvConsensusIntervalSets}.}

\item{feature_groups}{Optional data.frame defining "id" and "group". Default of NULL uses \link[seqsetvis]{ssvFactorizeMembTable} on overlaps_gr}

\item{view_size}{Size of regions to fetch.  Will be median of widths of overlaps_gr if NULL. Default is NULL.}

\item{group_var}{character. Must not already be present in query_dt  Will be added. Default is "overlap_group".}

\item{rank_var}{character. Must not already be present in query_dt  Will be added. Default is "rnk".}

\item{min_group_size}{Groups smaller than this are allowed but larger groups won't be shrunk below this length. Default is 50.}

\item{max_group_size}{Even if the smallest group is larger than this, no group will exceed this size. Default is 500.}

\item{discard_group_below}{Groups smaller than this will be discarded entirely. Default is 1.}

\item{...}{Passed to \link[seqsetvis]{ssvFetchBam} or \link[seqsetvis]{ssvFetchBigwig} as appropriate to file type.}
}
\value{
A profile data.table with overlap grouping information add and independent ranking added to each group.
}
\description{
Creates a data.table with grouping for profiles based on overlaps in overlap_gr and ranking of signal within each.
}
\examples{
bw_files = dir(system.file("extdata", package = "seqqc"), pattern = "^M.+bw$", full.names = TRUE)
query_dt = make_dt(bw_files)
query_dt[, sample := sub("_FE_random100.A", "", name)]

peak_files = dir(system.file("extdata", package = "seqqc"), pattern = "Peak$", full.names = TRUE)
names(peak_files) = sub("_CTCF_rand.+", "", basename(peak_files))
peak_grs = seqsetvis::easyLoad_narrowPeak(peak_files, )
overlaps_gr = seqsetvis::ssvOverlapIntervalSets(peak_grs)
query_gr = resize(overlaps_gr, 6e2, fix = "center")

group_prof_dt = make_feature_overlap_signal_profiles(query_dt, overlaps_gr)
plot_feature_overlap_signal_profiles(group_prof_dt)
}
