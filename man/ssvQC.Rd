% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ssvQC.R
\name{ssvQC}
\alias{ssvQC}
\alias{ssvQC.runAll}
\alias{ssvQC.prepMappedReads}
\title{ssvQC}
\usage{
ssvQC(
  feature_config = NULL,
  signal_config = NULL,
  out_dir = getwd(),
  bfc = NULL,
  ...
)

ssvQC.runAll(object)

ssvQC.prepMappedReads(object)
}
\arguments{
\item{feature_config}{Controls features configuration.  May be a:
QcConfigFeatures object, path to a file defining configuration via
QcConfigFeatures.parse, features files to define via
QcConfigFeatures.files, or a data.frame to pass to QcConfigFeatures.}

\item{signal_config}{Controls signal configuration.  May be a: QcConfigSignal
object, path to a file defining configuration via QcConfigSignal.parse,
features files to define via QcConfigSignal.files, or a data.frame to pass
to QcConfigSignal.}

\item{out_dir}{NYI}

\item{bfc}{BiocFileCache object to use for caching. If NULL, default
BiocFileCache::BiocFileCache() will be used.}

\item{object}{ssvQC object}
}
\value{
A ssvQC object.  Data needs to be loaded after via ssvQC.runAll or sub-methods ssvQC.plot*.

ssvQC object
}
\description{
Runs all appropriated ssvQC.prep\* and ssvQC.plot\* functions for the ssvQC object.
}
\examples{
options(mc.cores = 10)
set.seed(0)
feature_config_file = system.file(package = "ssvQC", "extdata/ssvQC_peak_config.csv")
feature_config = QcConfigFeatures.parse(feature_config_file)

bam_config_file = system.file(package = "ssvQC", "extdata/ssvQC_bam_config.csv")
bam_config = QcConfigSignal.parse(bam_config_file)

bigwig_config_file = system.file(package = "ssvQC", "extdata/ssvQC_bigwig_config.csv")
bigwig_config = QcConfigSignal.parse(bigwig_config_file)

sqc.complete.file = ssvQC(feature_config_file, bam_config_file)

sqc.complete = ssvQC(feature_config, bam_config)

sqc.complete.bw = ssvQC(feature_config, bigwig_config_file)

sqc.signal = ssvQC(signal_config = bam_config)

sqc.feature = ssvQC(feature_config = feature_config)

ssvQC.runAll(sqc.signal)
ssvQC.runAll(sqc.feature)

sqc.complete = ssvQC.runAll(sqc.complete)
}
